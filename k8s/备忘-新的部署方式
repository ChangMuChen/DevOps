systemctl stop firewalld
systemctl disable firewalld
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config


rpm -Uvh --force --nodeps packages/*.rpm

systemctl start docker
systemctl enable docker
systemctl enable ntpd
systemctl start ntpd

docker load -i docker-images/ceph_k8s_kuboard_metrics.tar


## CEPH
alias ceph='cephadm shell -- ceph'
mkdir -p /etc/ceph
cephadm bootstrap --config ceph.conf --mon-ip 172.17.118.86 \
  --skip-pull --initial-dashboard-user admin --initial-dashboard-password 123456  \
  --allow-fqdn-hostname --dashboard-password-noupdate
ceph orch host set-addr master 172.17.118.86
ceph orch daemon add osd master:/dev/sdb
radosgw-admin realm create --rgw-realm=newpwr --default
radosgw-admin zonegroup create --rgw-zonegroup=genoany --master --default
radosgw-admin zone create --rgw-zonegroup=genoany --rgw-zone=default --master --default
ceph orch apply rgw newpwr default --port=7480
radosgw-admin user create --uid=admin --display-name=admin --system
ceph dashboard set-rgw-api-access-key Y4R6MMLLBA3JIUDQ9IWH
ceph dashboard set-rgw-api-secret-key KN5LdLoZM5B8IV7vGe0LyLs4qgRYAABQzCxTkhKQ
ceph dashboard set-rgw-api-ssl-verify False


## k8s


cat <<EOF >  /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system

vi /etc/sysconfig/kubelet
KUBELET_EXTRA_ARGS="--fail-swap-on=false"
systemctl enable kubelet
systemctl restart kubelet
kubeadm init --kubernetes-version=1.18.3 --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=172.17.118.86 --ignore-preflight-errors=Swap

	mkdir -p $HOME/.kube
	sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl taint nodes --all node-role.kubernetes.io/master-
kubectl apply -f yaml/calico.yaml
kubectl apply -f yaml/kuboard.yaml
kubectl apply -f yaml/metrics-server.yaml
kubectl -n kube-system create secret generic etcd-certs --from-file=/etc/kubernetes/pki/etcd/server.crt --from-file=/etc/kubernetes/pki/etcd/server.key
kubectl create -f yaml/eip-monitor-system.yaml


echo $(kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep kuboard-user | awk '{print $1}') -o go-template='{{.data.token}}' | base64 -d)
watch kubectl get pods --all-namespaces
